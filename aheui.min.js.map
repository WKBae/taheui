{"version":3,"file":"aheui.min.js","mappings":"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","sources":["webpack://aheui/webpack/universalModuleDefinition","webpack://aheui/webpack/bootstrap","webpack://aheui/webpack/runtime/define property getters","webpack://aheui/webpack/runtime/hasOwnProperty shorthand","webpack://aheui/webpack/runtime/make namespace object","webpack://aheui/./src/aheui.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aheui\"] = factory();\n\telse\n\t\troot[\"aheui\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const cho = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'] as const\nconst jung = ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'] as const\nconst jong = ['', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'] as const\nconst jongCount = [0, 2, 4, 4, 2, 5, 5, 3, 5, 7, 9, 9, 7, 9, 9, 8, 4, 4, 6, 2, 4, 1, 3, 4, 3, 4, 4, 3] as const\n\ninterface Storage {\n\tpush(value: number): void\n\n\tpop(): number | undefined\n\n\tappend(value: number): void\n\n\tevery(loop: (element: number, index: number) => (boolean | void)): void\n}\n\n/**\n * Single stack storing numbers.\n */\nclass Stack implements Storage {\n\tprivate readonly _items: number[] = []\n\n\t/**\n\t * Push a number into the stack.\n\t */\n\tpush(value: number) {\n\t\tthis._items.push(value)\n\t}\n\n\t/**\n\t * Pop a number from the stack. Returns `undefined` if the stack is empty.\n\t * @returns Popped value\n\t */\n\tpop(): number | undefined {\n\t\treturn this._items.pop()\n\t}\n\n\t/**\n\t * Same as push(number)\n\t */\n\tappend(value: number) {\n\t\tthis.push(value)\n\t}\n\n\t/**\n\t * Loops for each element of this stack. Index orders from the bottom(first-in, last-out) to top(last-in, first-out)\n\t * @param loop Loop function with parameters (element, index), optionally returns false to break, called for every elements.\n\t */\n\tevery(loop: (element: number, index: number) => (boolean | void)) {\n\t\tfor (let i = 0; i < this._items.length; i++) {\n\t\t\tif (loop(this._items[i], i) === false) break\n\t\t}\n\t}\n}\n\ntype QueueNode = [number, QueueNode | null];\n\n/**\n * Queue, FIFO data structure storing numbers\n */\nclass Queue implements Storage {\n\t/**\n\t * The head of the linked list. Using the linked list for better performance on pop() operation.\n\t * Data in the list is represented as an array, [value, next].\n\t */\n\tprivate _head: QueueNode | null = null;\n\n\t/**\n\t * The tail to push the values beyond.\n\t */\n\tprivate _tail: QueueNode | null = null\n\n\t/**\n\t * Push a number into the stack.\n\t */\n\tpush(value: number) {\n\t\tconst node: QueueNode = [value, null]\n\t\tif (this._tail) {\n\t\t\tthis._tail[1] = node\n\t\t\tthis._tail = node\n\t\t} else {\n\t\t\tthis._tail = this._head = node\n\t\t}\n\t}\n\n\t/**\n\t * Pulls a number from the queue. Returns `undefined` if the queue is empty\n\t * @return Pulled value\n\t */\n\tpop(): number | undefined {\n\t\tif (this._head) {\n\t\t\tconst val = this._head[0]\n\t\t\tthis._head = this._head[1]\n\t\t\tif (!this._head) this._tail = null\n\t\t\treturn val\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\t/**\n\t * Appends the value to the front of the queue, unlike push() which adds to the last.\n\t */\n\tappend(value: number) {\n\t\tthis._head = [value, this._head]\n\t}\n\n\t/**\n\t * Loops for each element of this queue. Index orders from the front(first-in, first-out) to back(last-in, last-out)\n\t * @param loop Loop function with parameters (element, index), optionally returns false to break, called for every elements.\n\t */\n\tevery(loop: (element: number, index: number) => (boolean | void)) {\n\t\tfor (let node = this._head, i = 0; node != null; node = node[1], i++) {\n\t\t\tif (loop(/** @type {number} */ (node[0]), i) === false) break\n\t\t}\n\t}\n}\n\ntype Operation = (this: Aheui, storage: Storage, argument: number) => Promise<boolean> | boolean\n\n/**\n * Simple Operation wrapper allowing void returns.\n * @param operation Operation function to execute\n * @returns Operation\n */\nfunction rawOperation(operation: (this: Aheui, storage: Storage, argument: number) => (boolean | void)): Operation {\n\treturn function(this: Aheui, storage: Storage, argument: number) {\n\t\treturn operation.call(this, storage, argument) ?? true\n\t}\n}\n\n/**\n * Operation wrapper with Promise(async) support allowing void returns.\n * @param operation Operation function to execute\n * @returns Operation\n */\nfunction asyncOperation(operation: (this: Aheui, storage: Storage, argument: number) => (Promise<boolean | void> | boolean | void)): Operation {\n\treturn function(this: Aheui, storage: Storage, argument: number) {\n\t\tconst result = operation.call(this, storage, argument)\n\t\tif (typeof result === 'object') {\n\t\t\treturn result.then(value => value ?? true)\n\t\t}\n\t\treturn result ?? true\n\t}\n}\n\n/**\n * Push result, if the type is number, into the storage.\n * @param storage Target storage to push into.\n * @param result Value of unknown type; push into storage if it is a number.\n */\nfunction pushNumberHandler(storage: Storage, result: unknown) {\n\tif (typeof result === 'number') {\n\t\tstorage.push(result)\n\t}\n}\n\n// N-length tuple of type T, taken from https://stackoverflow.com/a/52490977\ntype Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\n/**\n * Utility function to build an operation which pops certain amount of values from storage, process, and push back the result into the storage.\n * @param count Number of items to pop from storage.\n * @param operation Manipulator function which takes `count` number of arguments and returns a number to push into storage.\n */\nfunction popOperation<N extends number>(count: N, operation: (...args: Tuple<number, N>) => number): Operation\n/**\n * Utility function to build an operation which pops certain amount of values from storage, process, and handle the result.\n * @param count Number of items to pop from storage.\n * @param operation Manipulator function which takes `count` number of arguments and returns a number to pass to resultHandler.\n * @param resultHandler Handle the operation result(=>argument) along with character's parameter(Jongseong;=>value). Return true (or void) to continue in forward direction, or false to proceed in reverse direction.\n */\nfunction popOperation<T, N extends number>(count: N, operation: (...args: Tuple<number, N>) => T, resultHandler: (storage: Storage, argument: T, value: number) => (boolean | void)): Operation\n\nfunction popOperation<T>(count: number, operation: (...args: number[]) => T, resultHandler: (this: Aheui, storage: Storage, argument: T, value: number) => (boolean | void) = pushNumberHandler): Operation {\n\t// Fast path for frequent count values\n\tif (count == 1) {\n\t\treturn function pop1Operate(stack, argument) {\n\t\t\tconst one = stack.pop()\n\t\t\tif (one === undefined) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn resultHandler.call(this, stack, operation(one), argument) ?? true\n\t\t}\n\t} else if (count == 2) {\n\t\treturn function pop2Operate(stack, argument) {\n\t\t\tconst two = stack.pop()\n\t\t\tif (two === undefined) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tconst one = stack.pop()\n\t\t\tif (one === undefined) {\n\t\t\t\tstack.append(two)\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn resultHandler.call(this, stack, operation(one, two), argument) ?? true\n\t\t}\n\t} else {\n\t\treturn function popOperate(stack, argument) {\n\t\t\tconst args: number[] = []\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\n\t\t\t\tconst value = stack.pop()\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tfor (i++; i < count; i++) {\n\t\t\t\t\t\tstack.append(args[i])\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\targs[i] = value\n\t\t\t}\n\t\t\treturn resultHandler.call(this, stack, operation.apply(null, args), argument) ?? true\n\t\t}\n\t}\n}\n\n/**\n * Tuple of [Choseong, Jungseong, Jongseong] indices, or [Operation, Direction, Argument].\n * Can be mapped into character with exported variables `cho`, `jung`, `jong`.\n */\ntype Syllable = [operation: number, direction: number, argument: number]\n\n/**\n * Parse a Hangul character into Syllable tuple.\n * If the given character is not a Hangul syllable, null is returned.\n * @param c A character or unicode codepoint to parse\n * @returns Tuple of [Choseong, Jungseong, Jongseong], or `null` if not a full Hangul syllable\n */\nfunction parseChar(c: string | number): Syllable | null {\n\tif (typeof c === 'string') c = c.charCodeAt(0)\n\tif (c < 0xAC00 || c > 0xD7A3) return null\n\tc -= 0xAC00\n\treturn [c / 28 / 21 | 0, (c / 28 | 0) % 21, c % 28]\n}\n\nconst NO_OP = () => true\n\ntype NoArgEventHandler = (this: Aheui) => void\ntype NumberEventHandler = (this: Aheui, value: number) => void\ntype CharEventHandler = (this: Aheui, char: string) => void\n\ntype AheuiEvents = {\n\t'start': NoArgEventHandler\n\t'step': NoArgEventHandler\n\t'stop': NoArgEventHandler\n\t'end': NumberEventHandler\n\t'reset': NoArgEventHandler\n\t'integer': NumberEventHandler\n\t'character': CharEventHandler\n}\n\n/**\n * Aheui script interpreter\n */\nclass Aheui {\n\t/**\n\t * Original script text\n\t */\n\treadonly script: string\n\t/**\n\t * Parsed `script` in [y][x] order. null if the character is not a Hangul syllable.\n\t */\n\treadonly plane: readonly (readonly (Syllable | null)[])[]\n\tprivate _callbacks: { [Event in keyof AheuiEvents]?: AheuiEvents[Event][] }\n\n\tprivate _intIn: (this: Aheui) => number | Promise<number>\n\tprivate _charIn: (this: Aheui) => string | number | Promise<string | number>\n\n\tstacks: Storage[] = []\n\n\tcurrentStack: number = 0\n\texitCode: number | null = null\n\tstepCount: number = 0\n\trunning = false\n\tprivate _runIndex: number = 0\n\n\tx: number = 0\n\ty: number = 0\n\n\tdx: number = 0\n\tdy: number = 1\n\n\tprivate static readonly _operations: readonly Operation[] = [\n\t\t/* ㄱ */ NO_OP,\n\t\t/* ㄲ */ NO_OP,\n\t\t/* ㄴ */ popOperation(2, (a, b) => a / b | 0),\n\t\t/* ㄷ */ popOperation(2, (a, b) => a + b),\n\t\t/* ㄸ */ popOperation(2, (a, b) => a * b),\n\t\t/* ㄹ */ popOperation(2, (a, b) => a % b),\n\t\t/* ㅁ */ popOperation(1, (a) => a,\n\t\t\tfunction(this: Aheui, stack, result, argument) {\n\t\t\t\tif (argument === 21 /* ㅇ */) {\n\t\t\t\t\tthis.emit('integer', result)\n\t\t\t\t} else if (argument === 27 /* ㅎ */) {\n\t\t\t\t\tlet char\n\t\t\t\t\tif (result <= 0xFFFF || result > 0x10FFFF) {\n\t\t\t\t\t\tchar = String.fromCharCode(result)\n\t\t\t\t\t} else { // build surrogate pair\n\t\t\t\t\t\tresult -= 0x10000\n\t\t\t\t\t\tchar = String.fromCharCode((result >> 10) + 0xD800, (result % 0x400) + 0xDC00)\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('character', char)\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}),\n\t\t/* ㅂ */ asyncOperation(function(this: Aheui, stack, argument) {\n\t\t\t// Minimize use of async/await, which always wrap function in Promise, for performance concern\n\t\t\tif (argument === 21 /* ㅇ */) {\n\t\t\t\tconst num = this._intIn();\n\t\t\t\tif (typeof num === 'object') {\n\t\t\t\t\treturn num.then((value) => {\n\t\t\t\t\t\tstack.push(value)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tstack.push(num)\n\t\t\t} else if (argument === 27 /* ㅎ */) {\n\t\t\t\tconst char = this._charIn()\n\t\t\t\tif (typeof char === 'object') {\n\t\t\t\t\treturn char.then((value) => {\n\t\t\t\t\t\tstack.push(typeof value === 'string' ? value.charCodeAt(0) : value)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tstack.push(typeof char === 'string' ? char.charCodeAt(0) : char)\n\t\t\t} else {\n\t\t\t\tstack.push(jongCount[argument])\n\t\t\t}\n\t\t}),\n\t\t/* ㅃ */ popOperation(1, (a) => a,\n\t\t\t(stack, a) => {\n\t\t\t\tif (stack.append) {\n\t\t\t\t\tstack.append(a)\n\t\t\t\t\tstack.append(a)\n\t\t\t\t} else {\n\t\t\t\t\tstack.push(a)\n\t\t\t\t\tstack.push(a)\n\t\t\t\t}\n\t\t\t}),\n\t\t/* ㅅ */ rawOperation(function(this: Aheui, stack, argument) {\n\t\t\tthis.currentStack = argument\n\t\t}),\n\t\t/* ㅆ */ popOperation(1, (a) => a,\n\t\t\tfunction(this: Aheui, stack, result, argument) {\n\t\t\t\tthis.stacks[argument].push(result)\n\t\t\t}),\n\t\t/* ㅇ */ NO_OP,\n\t\t/* ㅈ */ popOperation(2, (a, b) => a >= b ? 1 : 0),\n\t\t/* ㅉ */ NO_OP,\n\t\t/* ㅊ */ popOperation(1, (a) => a != 0,\n\t\t\tfunction(this: Aheui, stack, result) {\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.dx = -this.dx\n\t\t\t\t\tthis.dy = -this.dy\n\t\t\t\t}\n\t\t\t}),\n\t\t/* ㅋ */ NO_OP,\n\t\t/* ㅌ */ popOperation(2, (a, b) => a - b),\n\t\t/* ㅍ */ popOperation(2, (a, b) => [b, a],\n\t\t\t(stack, [b, a]) => {\n\t\t\t\tstack.append(b)\n\t\t\t\tstack.append(a)\n\t\t\t}),\n\t\t/* ㅎ */ rawOperation(function(this: Aheui, stack) {\n\t\t\tthis.exitCode = stack.pop() || 0\n\t\t})\n\t]\n\n\t/**\n\t * Build an Aheui interpreter with the given script string.\n\t * @param script The Aheui script\n\t */\n\tconstructor(script: string) {\n\t\tthis.script = script\n\n\t\tthis._init()\n\n\t\tconst lines = this.script.split(/\\r?\\n/)\n\t\tconst plane: (Syllable | null)[][] = []\n\t\tlines.forEach((line, i) => {\n\t\t\tplane[i] = []\n\t\t\tfor (let j = 0; j < line.length; j++) {\n\t\t\t\tplane[i][j] = parseChar(line.charCodeAt(j))\n\t\t\t}\n\t\t})\n\t\tthis.plane = plane;\n\n\t\tthis._callbacks = {}\n\n\t\t// TODO use callbacks instead of return value\n\t\tthis._intIn = () => -1\n\t\tthis._charIn = () => -1\n\t}\n\n\t/**\n\t * Initializes(clears) the local variables.\n\t */\n\tprivate _init() {\n\t\tthis.stacks = []\n\t\tfor (let i = 0; i < jong.length; i++) {\n\t\t\tif (i == 21 /* 'ㅇ' */) this.stacks[i] = new Queue()\n\t\t\telse this.stacks[i] = new Stack()\n\t\t}\n\n\t\tthis.currentStack = 0\n\t\tthis.exitCode = null\n\t\tthis.stepCount = 0\n\t\tthis.running = false\n\t\tthis._runIndex += 1 // Resetting this to 0 can mess up ongoing loops\n\n\t\tthis.x = 0\n\t\tthis.y = 0\n\n\t\tthis.dx = 0\n\t\tthis.dy = 1\n\t}\n\n\t/**\n\t * Resets the execution status of the script\n\t */\n\treset() {\n\t\tthis._init()\n\t\tthis.emit('reset')\n\t}\n\n\t/**\n\t * Execute a single cell.\n\t */\n\tstep(): void | Promise<void> {\n\t\tif (this.exitCode !== null) return\n\t\tif (!this.running) {\n\t\t\tthis.emit('start')\n\t\t}\n\n\t\tconst cell = this.plane[this.y]?.[this.x]\n\t\tif (cell) {\n\t\t\tthis._updateDirection(cell[1])\n\t\t\tlet success = Aheui._operations[cell[0]].call(this, this.stacks[this.currentStack], cell[2])\n\t\t\tif (typeof success === 'object') {\n\t\t\t\treturn success.then((asyncSuccess) => {\n\t\t\t\t\tif (!asyncSuccess) {\n\t\t\t\t\t\tthis._updateDirection(19 /* ㅢ, reverse */)\n\t\t\t\t\t}\n\t\t\t\t\tthis._followDirection()\n\n\t\t\t\t\tthis.stepCount++\n\t\t\t\t\tthis.emit('step')\n\t\t\t\t\tif (!this.running) {\n\t\t\t\t\t\tif (this.exitCode === null) {\n\t\t\t\t\t\t\tthis.emit('stop')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.emit('end', this.exitCode)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (!success) {\n\t\t\t\tthis._updateDirection(19 /* ㅢ, reverse */)\n\t\t\t}\n\t\t}\n\t\tthis._followDirection()\n\n\t\tthis.stepCount++\n\t\tthis.emit('step')\n\t\tif (!this.running) {\n\t\t\tif (this.exitCode === null) {\n\t\t\t\tthis.emit('stop')\n\t\t\t} else {\n\t\t\t\tthis.emit('end', this.exitCode)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Start execution from the last stopped position(or the beginning)\n\t * @param batchSize Size of the batch, the number of cells to execute per timer tick. 0 to run synchronously.\n\t * @returns Promise resolving script exit code on completion. Rejected when cancelled.\n\t */\n\tasync run(batchSize: number = 10000): Promise<number> {\n\t\tif (this.running) this.stop()\n\t\tthis.running = true\n\n\t\tthis.emit('start')\n\n\t\tif (batchSize === 0) {\n\t\t\tconst runIdx = ++this._runIndex\n\t\t\twhile (this.exitCode === null) {\n\t\t\t\tconst ret = this.step()\n\t\t\t\tif (typeof ret === 'object') {\n\t\t\t\t\tawait ret\n\t\t\t\t\t// Case optimization: if not awaited, _runIndex will not change in single-threaded JS\n\t\t\t\t\tif (this._runIndex !== runIdx) {\n\t\t\t\t\t\treturn Promise.reject()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.running = false\n\t\t\tthis.emit('end', this.exitCode)\n\t\t\treturn this.exitCode\n\t\t} else {\n\t\t\tconst exitCode = await this._batch(batchSize)\n\t\t\tthis.running = false\n\t\t\tthis.emit('end', exitCode)\n\t\t\treturn exitCode\n\t\t}\n\t}\n\n\t/**\n\t * Setup batches with the given count\n\t * @param count Number of cell runs in a batch\n\t * @returns Promise resolving script exit code on completion. Rejected when cancelled.\n\t */\n\tprivate _batch(count: number): Promise<number> {\n\t\tconst runIdx = ++this._runIndex\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Schedule job using MessageChannel since setTimeout/setInterval has minimum delay of 4ms\n\t\t\t// https://stackoverflow.com/a/61339234\n\t\t\tconst ch = new MessageChannel()\n\t\t\tch.port1.onmessage = async () => {\n\t\t\t\tif (this._runIndex !== runIdx) {\n\t\t\t\t\treject()\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < count && this.exitCode === null; i++) {\n\t\t\t\t\tconst ret = this.step()\n\t\t\t\t\tif (typeof ret === 'object') {\n\t\t\t\t\t\tawait ret\n\t\t\t\t\t\t// Case optimization: if not awaited, _runIndex will not change in single-threaded JS\n\t\t\t\t\t\tif (this._runIndex !== runIdx) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.exitCode !== null) {\n\t\t\t\t\tresolve(this.exitCode)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tch.port2.postMessage(null)\n\t\t\t}\n\t\t\tch.port2.postMessage(null)\n\t\t})\n\t}\n\n\t/**\n\t * Stop the running script.\n\t * Note: It cannot be stopped if a script is running synchronously.\n\t */\n\tstop() {\n\t\tif (this.running) {\n\t\t\tthis._runIndex += 1\n\t\t\tthis.running = false\n\t\t\tthis.emit('stop')\n\t\t}\n\t}\n\n\t/**\n\t * Update the direction vector according to the given Jungseong directive.\n\t * @param jung 0-based Jungseong of an instruction\n\t */\n\tprivate _updateDirection(jung: number) {\n\t\tswitch (jung) {\n\t\t\tcase 0: /* ㅏ */\n\t\t\t\tthis.dx = 1\n\t\t\t\tthis.dy = 0\n\t\t\t\tbreak\n\t\t\tcase 4: /* ㅓ */\n\t\t\t\tthis.dx = -1\n\t\t\t\tthis.dy = 0\n\t\t\t\tbreak\n\t\t\tcase 13: /* ㅜ */\n\t\t\t\tthis.dx = 0\n\t\t\t\tthis.dy = 1\n\t\t\t\tbreak\n\t\t\tcase 8: /* ㅗ */\n\t\t\t\tthis.dx = 0\n\t\t\t\tthis.dy = -1\n\t\t\t\tbreak\n\n\t\t\tcase 2: /* ㅑ */\n\t\t\t\tthis.dx = 2\n\t\t\t\tthis.dy = 0\n\t\t\t\tbreak\n\t\t\tcase 6: /* ㅕ */\n\t\t\t\tthis.dx = -2\n\t\t\t\tthis.dy = 0\n\t\t\t\tbreak\n\t\t\tcase 17: /* ㅠ */\n\t\t\t\tthis.dx = 0\n\t\t\t\tthis.dy = 2\n\t\t\t\tbreak\n\t\t\tcase 12: /* ㅛ */\n\t\t\t\tthis.dx = 0\n\t\t\t\tthis.dy = -2\n\t\t\t\tbreak\n\n\t\t\tcase 20: /* ㅣ */\n\t\t\t\tthis.dx = -this.dx\n\t\t\t\tbreak;\n\t\t\tcase 18: /* ㅡ */\n\t\t\t\tthis.dy = -this.dy\n\t\t\t\tbreak\n\t\t\tcase 19: /* ㅢ */\n\t\t\t\tthis.dx = -this.dx\n\t\t\t\tthis.dy = -this.dy\n\t\t\t\tbreak\n\t\t\t// default: break\n\t\t}\n\t}\n\n\t/**\n\t * Moves along the plane by the direction vector.\n\t */\n\tprivate _followDirection() {\n\t\tthis.x += this.dx\n\t\tif (this.x < 0) {\n\t\t\tthis.x = this.plane[this.y].length - 1\n\t\t} else if (this.x >= this.plane[this.y].length && this.dx !== 0) {\n\t\t\tthis.x = 0\n\t\t}\n\n\t\tthis.y += this.dy\n\t\tif (this.y < 0) {\n\t\t\tthis.y = this.plane.length - 1\n\t\t} else if (this.y >= this.plane.length) {\n\t\t\tthis.y = 0\n\t\t}\n\t}\n\n\t/**\n\t * Register a callback for an event.\n\t * @param event Name of event\n\t * @param callback Function to run if the event has occured\n\t * @returns `this` for chaining\n\t */\n\ton<Event extends keyof AheuiEvents>(event: Event, callback: AheuiEvents[Event]): Aheui {\n\t\tif (!this._callbacks[event]) {\n\t\t\tthis._callbacks[event] = []\n\t\t}\n\n\t\tthis._callbacks[event]!.push(callback as any)\n\t\treturn this\n\t}\n\n\t/**\n\t * Unregister all callbacks registered.\n\t * @returns `this` for chaining\n\t */\n\toff<Event extends keyof AheuiEvents>(): Aheui\n\t/**\n\t * Unregister all callbacks registered to the `event`.\n\t * @param event Event name to unregister all callbacks.\n\t * @returns `this` for chaining\n\t */\n\toff<Event extends keyof AheuiEvents>(event: Event): Aheui\n\t/**\n\t * Unregister the given `callback` function from the `event`.\n\t * @param event Event name to unregister the callback.\n\t * @param callback Callback function to unregister.\n\t * @returns `this` for chaining\n\t */\n\toff<Event extends keyof AheuiEvents>(event: Event, callback: AheuiEvents[Event]): Aheui\n\toff<Event extends keyof AheuiEvents>(event?: Event, callback?: AheuiEvents[Event]): Aheui {\n\t\tif (event) {\n\t\t\tif (callback) {\n\t\t\t\tconst callbacks = this._callbacks[event];\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tthis._callbacks[event] = (callbacks! as any[]).filter((cb) => cb !== callback);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdelete this._callbacks[event]\n\t\t\t}\n\t\t} else {\n\t\t\tthis._callbacks = {}\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Emits an event. Calls all callback functions registered for this event.\n\t * @param event Name of event to fire\n\t * @param args Arguments to pass to callback functions\n\t * @returns `this` for chaining\n\t */\n\tprivate emit<Event extends keyof AheuiEvents>(event: Event, ...args: Parameters<AheuiEvents[Event]>) {\n\t\tlet listeners = this._callbacks[event];\n\t\tif (listeners) {\n\t\t\t// callbacks may unregister themselves within callback, so loop backward\n\t\t\tfor (let i = listeners.length - 1; i >= 0; i--) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tlisteners[i].apply(this, args)\n\t\t\t}\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets input function returning number, which is called on number input\n\t * Aheui object is bound as `this` when the function is called.\n\t * @param inputFunc Function returning integer\n\t * @returns Old integer input function\n\t */\n\tsetIntegerInput(inputFunc: (this: Aheui) => number | Promise<number>) {\n\t\tconst old = this._intIn\n\t\tthis._intIn = inputFunc\n\t\treturn old\n\t}\n\n\t/**\n\t * Sets input function returning character, which is called on character input\n\t * Aheui object is bound as `this` when the function is called.\n\t * @param inputFunc Function returning a character, or a unicode codepoint\n\t * @returns Old character input function\n\t */\n\tsetCharacterInput(inputFunc: (this: Aheui) => string | number | Promise<string | number>) {\n\t\tconst old = this._charIn\n\t\tthis._charIn = inputFunc\n\t\treturn old\n\t}\n}\n\nexport default Aheui;\nexport {\n\tAheui,\n\tcho,\n\tjung,\n\tjong,\n};\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","cho","jung","jong","jongCount","Stack","_items","push","pop","append","every","loop","i","length","Queue","_head","_tail","node","val","rawOperation","operation","storage","argument","pushNumberHandler","result","popOperation","count","resultHandler","stack","one","undefined","two","args","apply","NO_OP","Aheui","constructor","script","stacks","currentStack","exitCode","stepCount","running","_runIndex","x","y","dx","dy","_init","lines","split","plane","forEach","line","j","c","charCodeAt","_callbacks","_intIn","_charIn","reset","emit","step","cell","_updateDirection","success","_operations","then","asyncSuccess","_followDirection","run","batchSize","stop","runIdx","ret","Promise","reject","_batch","resolve","ch","MessageChannel","port1","onmessage","port2","postMessage","on","event","callback","off","callbacks","filter","cb","listeners","setIntegerInput","inputFunc","old","setCharacterInput","a","b","char","String","fromCharCode","num"],"sourceRoot":""}